#!/usr/bin/env perl
use strict;
use warnings;
use DateTime;
use DateTime::Duration;
use JSON;
use LWP::UserAgent;
use YAML::XS;

my ($when, $which, $note) = @ARGV;

my $usage = "usage: mulligan [when] [goal]\n";

die $usage unless @ARGV == 2 or @ARGV == 3;

my $tz = $ENV{TZ} // 'local';

my $date;
if ($when =~ /\pL/) {
  my $days = { today => 0, yesterday => 1, vorgestern => 2 }->{$when}
          // die $usage;

  $date = (DateTime->now(time_zone => $tz)
        - DateTime::Duration->new(days => $days))
        ->iso8601;
} elsif ($when =~ m{ \A ([0-9]{4})-([0-9]{2})-([0-9]{2}) \z }x) {
  $date = DateTime->new(time_zone => $tz, year => $1, month => $2, day => $3)
        ->iso8601;
}

my $config = YAML::XS::LoadFile("$ENV{HOME}/.ywar");

my $JSON = JSON->new;
my $tdp_token = $config->{TDP}{token};

my $goal_res = LWP::UserAgent->new->get(
  "http://tdp.me/v1/goals/",
  'X-Access-Token' => $tdp_token,
);

die "fail" unless $goal_res->is_success;

my @goals = @{ $JSON->decode($goal_res->decoded_content)->{goals} };

my @candidates = grep { $_->{active} && index($_->{name}, $which) >= 0 } @goals;

unless (@candidates) {
  die "couldn't find any candidate for <$which>\n";
}

if (@candidates > 1) {
  print "More than one candidate!\n";
  for (@candidates) {
    printf "%6s. %s\n", $_->{id}, $_->{name};
  }
  exit 1;
}

my $payload = $JSON->encode({
  quantity => 0,
  vacation => 1,
  note     => $note // "mulligan logged",
  date     => $date,
});

my $res = LWP::UserAgent->new->post(
  "http://tdp.me/v1/goals/$candidates[0]{id}/completion",
  Content => $payload,
  'Content-type' => 'application/json',
  'X-Access-Token' => $tdp_token,
);
